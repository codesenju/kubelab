- hosts: k8s-control-plane-1
  become: no
  tasks:

    - name: Deploy Cert Manager
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: cert-manager
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            source:
              chart: cert-manager
              repoURL: https://charts.jetstack.io
              targetRevision: v1.18.2
              helm:
                releaseName: cert-manager
                values: |
                  installCRDs: true
            destination:
              server: https://kubernetes.default.svc
              namespace: cert-manager
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true

    - name: Create cloudflare-api-key secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: cloudflare-api-key
            namespace: cert-manager
          type: Opaque
          stringData:
            apiToken: "{{ cloudflare_api_token }}"

    - name: Create letsencrypt-staging ClusterIssuer
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-staging
          spec:
            acme:
              server: https://acme-staging-v02.api.letsencrypt.org/directory
              email: '{{ letsencrypt_email }}'
              privateKeySecretRef:
                name: letsencrypt-staging
              solvers:
                - dns01:
                    cloudflare:
                      email: '{{ letsencrypt_email }}'
                      apiTokenSecretRef:
                        name: cloudflare-api-key
                        key: apiToken
                  selector:
                    dnsZones:
                      - "{{ domain_name_filter}}"

    - name: Create letsencrypt-production ClusterIssuer
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt-production
          spec:
            acme:
              server: https://acme-v02.api.letsencrypt.org/directory
              email: '{{ letsencrypt_email }}'
              privateKeySecretRef:
                name: letsencrypt-staging
              solvers:
                - dns01:
                    cloudflare:
                      email: '{{ letsencrypt_email }}'
                      apiTokenSecretRef:
                        name: cloudflare-api-key
                        key: apiToken
                  selector:
                    dnsZones:
                      - "{{ domain_name_filter }}"