- hosts: k8s-control-plane-1
  gather_facts: no
  tasks:

    - name: Create elastic-fleet-secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: elastic-fleet-secret
            namespace: elastic-system
          type: Opaque
          stringData:
            FLEET_URL: "{{ fleet_url }}"
            FLEET_ENROLLMENT_TOKEN: "{{ fleet_enrollment_token }}"
            KIBANA_HOST: "{{ kibana_host }}"
            KIBANA_FLEET_USERNAME: "{{ kibana_fleet_username }}"
            KIBANA_FLEET_PASSWORD: "{{ kibana_fleet_password }}"
            FLEET_SERVER_ENABLED: "{{ fleet_server_enabled }}"
            FLEET_SERVER_ELASTICSEARCH_HOST: "{{ fleet_server_es_host }}"
            FLEET_SERVER_SERVICE_TOKEN: "{{ fleet_server_service_token }}"
            

    - name: Deploy elastic agent managed fleet
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: elastic-agent-managed-fleet
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            source:
              repoURL: https://github.com/codesenju/kubelab.git
              path: kustomize/elastic-agent-managed/overlays/prod
              targetRevision: main
              kustomize:
                # Add these to your existing kustomize config
                labels:
                  app.kubernetes.io/instance: elastic-agent
            destination:
              server: https://kubernetes.default.svc
              namespace: elastic-system
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
              - CreateNamespace=true
              - ServerSideApply=true
              - RespectIgnoreDifferences=true
            # ignoreDifferences:
            #   - group: "postgresql.cnpg.io"
            #     kind: Cluster
            #     jsonPointers:
            #       - /spec/managed/roles