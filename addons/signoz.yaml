- hosts: k8s-control-plane-1
  become: no
  gather_facts: no
  vars:
    namespace: signoz
  tasks:

    - name: Deploy Signoz
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: signoz
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            source:
              chart: signoz
              repoURL: https://charts.signoz.io
              targetRevision: 0.89.1
              helm:
                releaseName: signoz
                values: |
                  global:
                    storageClass: nfs-csi
                    clusterName: "kubelab"
                    clickhouse:
                      installCustomStorageClass: true
                  otelCollector:
                    service:
                      type: ClusterIP
            destination:
              server: https://kubernetes.default.svc
              namespace: signoz
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true
      tags: signoz

    - name: Deploy Signoz k8s-infra
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: signoz-k8s-infra
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            source:
              chart: k8s-infra
              repoURL: https://charts.signoz.io
              targetRevision: 0.14.1
              helm:
                releaseName: signoz-k8s-infra
                values: |
                  global:
                    cloud: others
                    clusterName: "kubelab"
                    storageClass: "nfs-csi"
                    deploymentEnvironment: prod
                  otelCollectorEndpoint: signoz-otel-collector.signoz.svc.cluster.local:4317
                  otelInsecure: true
                  insecureSkipVerify: true
                  presets:
                    otlpExporter:
                      enabled: true
                    loggingExporter:
                      enabled: false
                    hostMetrics:
                      enabled: true
                      collectionInterval: 30s
                    logsCollection:
                      enabled: true
                      blacklist:
                        enabled: true
                        namespaces: 
                          - kube-system
                    kubeletMetrics:
                      enabled: true
                      otelInsecure: true
                      insecureSkipVerify: true
                    kubernetesAttributes:
                      enabled: true
                      otelInsecure: true
                      insecureSkipVerify: true
                    clusterMetrics:
                      enabled: true
                      otelInsecure: true
                      insecureSkipVerify: true
                    k8sEvents:
                      enabled: true
                      otelInsecure: true
                      insecureSkipVerify: true
            destination:
              server: https://kubernetes.default.svc
              namespace: signoz
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
                - CreateNamespace=true

    - name: Create local wildcar certificate
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: local-jazziro-com
            namespace: '{{ namespace }}'
          spec:
            secretName: local-jazziro-com-tls
            issuerRef:
              name: letsencrypt-production
              kind: ClusterIssuer
            commonName: "{{ dns_name_2 }}"
            dnsNames:
            - "{{ dns_name_1 }}"
            - "{{ dns_name_2 }}"

    - name: Create signoz IngressRoute
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: traefik.io/v1alpha1
          kind: IngressRoute
          metadata:
            name: signoz
            namespace: '{{ namespace }}'
            annotations:
              kubernetes.io/ingress.class: traefik
              external-dns.alpha.kubernetes.io/target: '{{ traefik_service_ip }}'
          spec:
            entryPoints:
              - websecure
            routes:
              - match: Host(`signoz.{{ dns_name_1 }}`)
                kind: Rule
                services:
                  - name: signoz
                    kind: Service
                    port: 8080
            tls:
              secretName: local-jazziro-com-tls√•

    - name: Create signoz-otel-collector IngressRoute
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: traefik.io/v1alpha1
          kind: IngressRoute
          metadata:
            name: signoz-otel-collector
            namespace: '{{ namespace }}'
            annotations:
              kubernetes.io/ingress.class: traefik
              external-dns.alpha.kubernetes.io/target: '{{ traefik_service_ip }}'
          spec:
            entryPoints:
              - websecure
            routes:
              - match: Host(`signoz-otel-collector.{{ dns_name_1 }}`)
                kind: Rule
                services:
                  - name: signoz-otel-collector
                    kind: Service
                    port: 4318
            tls:
              secretName: local-jazziro-com-tls