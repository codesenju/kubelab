---
- hosts: k8s-control-plane-1
  gather_facts: no
  become: no
  vars:
    namespace: minio
  tasks:
    - name: Deploy minio
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: minio
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            source:
              repoURL: https://github.com/codesenju/kubelab.git
              path: kustomize/minio/overlays/prod
              targetRevision: main
              kustomize:
                labels:
                  app.kubernetes.io/instance: minio
            destination:
              server: https://kubernetes.default.svc
              namespace: '{{ namespace }}'
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
              - CreateNamespace=true
              - ServerSideApply=true
              - RespectIgnoreDifferences=true

    - name: Create minio-env secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: minio-env
            namespace: '{{ namespace }}'
          stringData:
            MINIO_ROOT_USER: minio
            MINIO_ROOT_PASSWORD: '{{ minio_password }}'

    - name: Create minio ingress
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: minio
            namespace: '{{ namespace }}'
            annotations:
              external-dns.alpha.kubernetes.io/target: '{{ ingress_nginx_ip }}'
              # cert-manager.io/cluster-issuer: letsencrypt-production
          spec:
            ingressClassName: nginx
            tls:
            - hosts:
              - "minio.{{ dns_name_1 }}"
              - "s3.{{ dns_name_1 }}"
              secretName: local-jazziro-com-tls
            rules:
            - host: "minio.{{ dns_name_1 }}"
              http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: minio
                      port:
                        number: 9001
            - host: "s3.{{ dns_name_1 }}"
              http:
                paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: minio
                      port:
                        number: 9000
      tags: 
      - ingress