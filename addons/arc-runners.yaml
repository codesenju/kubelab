- hosts: k8s-control-plane-1
  gather_facts: no
  tasks:

    - name: Deploy GitHub Actions Runner Controller
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: gha-runner-scale-set-controller
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            source:
              repoURL: ghcr.io/actions/actions-runner-controller-charts
              chart: gha-runner-scale-set-controller
              targetRevision: "0.12.1"
              helm:
                releaseName: gha-runner-scale-set-controller
            destination:
              server: https://kubernetes.default.svc
              namespace: arc-systems
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
              - CreateNamespace=true
              - ServerSideApply=true
            ignoreDifferences:
            - group: apiextensions.k8s.io
              kind: CustomResourceDefinition
              jsonPointers:
              - /spec/preserveUnknownFields

    - name: Create additional RBAC permissions for cross-namespace access
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: gha-rs-controller-cross-namespace
          rules:
          - apiGroups: [""]
            resources: ["serviceaccounts"]
            verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
          - apiGroups: [""]
            resources: ["secrets"]
            verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
          - apiGroups: [""]
            resources: ["pods"]
            verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
          - apiGroups: ["rbac.authorization.k8s.io"]
            resources: ["roles", "rolebindings"]
            verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

    - name: Bind additional RBAC permissions to controller service account
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: gha-rs-controller-cross-namespace
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: gha-rs-controller-cross-namespace
          subjects:
          - kind: ServiceAccount
            name: gha-runner-scale-set-controller-gha-rs-controller
            namespace: arc-systems

    - name: Wait for controller deployment to be ready
      kubernetes.core.k8s_info:
        api_version: apps/v1
        kind: Deployment
        name: gha-runner-scale-set-controller-gha-rs-controller
        namespace: arc-systems
        wait: true
        wait_condition:
          type: Available
          status: "True"
        wait_timeout: 300

    - name: Create GitHub token secret for runner scale set
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: arc-runner-set-gha-rs-github-secret
            namespace: arc-runners
          type: Opaque
          data:
            github_token: "{{ github_pat | b64encode }}"

    - name: Deploy GitHub Actions Runner Scale Set
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: arc-runner-set
            namespace: argocd
            finalizers:
              - resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            source:
              repoURL: ghcr.io/actions/actions-runner-controller-charts
              chart: gha-runner-scale-set
              targetRevision: "0.12.1"
              helm:
                releaseName: arc-runner-set
                parameters:
                  - name: githubConfigUrl
                    value: "{{ github_config_url }}"
                  - name: githubConfigSecret
                    value: "arc-runner-set-gha-rs-github-secret"
                  - name: runnerScaleSetName
                    value: "kubelab-runner-set"
                  - name: controllerServiceAccount.name
                    value: "arc-gha-rs-controller"
                  - name: controllerServiceAccount.namespace
                    value: "arc-systems"
            destination:
              server: https://kubernetes.default.svc
              namespace: arc-runners
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
              syncOptions:
              - CreateNamespace=true
              - ServerSideApply=true
            ignoreDifferences:
            - group: actions.github.com
              kind: AutoscalingRunnerSet
              jsonPointers:
              - /spec/template/spec/initContainers
              - /spec/template/spec/containers
              - /spec/template/spec/volumes
              - /spec/template/spec/restartPolicy
              - /spec/template/spec/serviceAccountName

    - name: Wait for AutoscalingRunnerSet to be created
      kubernetes.core.k8s_info:
        api_version: actions.github.com/v1alpha1
        kind: AutoscalingRunnerSet
        name: arc-runner-set
        namespace: arc-runners
        wait: true
        wait_timeout: 120

    - name: Apply Docker-in-Docker configuration to AutoscalingRunnerSet
      kubernetes.core.k8s:
        state: present
        merge_type: merge
        definition:
          apiVersion: actions.github.com/v1alpha1
          kind: AutoscalingRunnerSet
          metadata:
            name: arc-runner-set
            namespace: arc-runners
          spec:
            template:
              spec:
                containers:
                - name: runner
                  image: ghcr.io/actions/actions-runner:latest
                  env:
                  - name: DOCKER_HOST
                    value: tcp://localhost:2375
                  - name: DOCKER_TLS_CERTDIR
                    value: ""
                  - name: DOCKER_TLS_VERIFY
                    value: ""
                  volumeMounts:
                  - name: work
                    mountPath: /home/runner/_work
                - name: dind
                  image: docker:24-dind
                  securityContext:
                    privileged: true
                  env:
                  - name: DOCKER_TLS_CERTDIR
                    value: ""
                  - name: DOCKER_DRIVER
                    value: overlay2
                  ports:
                  - containerPort: 2375
                    protocol: TCP
                  readinessProbe:
                    tcpSocket:
                      port: 2375
                    initialDelaySeconds: 5
                    periodSeconds: 5
                    timeoutSeconds: 3
                  livenessProbe:
                    tcpSocket:
                      port: 2375
                    initialDelaySeconds: 10
                    periodSeconds: 10
                    timeoutSeconds: 3
                  volumeMounts:
                  - name: work
                    mountPath: /home/runner/_work
                  - name: docker-graph-storage
                    mountPath: /var/lib/docker
                volumes:
                - name: work
                  emptyDir: {}
                - name: docker-graph-storage
                  emptyDir: {}
                restartPolicy: Never
                serviceAccountName: arc-runner-set-gha-rs-no-permission
