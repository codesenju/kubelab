- name: Install k9s
  hosts: k8s-control-plane-1
  vars_files:
  - ../ansible/vars.ignore.yaml
  become: no
  gather_facts: false
  tasks:
# kubectl get crd -o name | grep argoproj.io | xargs kubectl delete
    - name: Deploy Argocd
      kubernetes.core.helm:
        name: argocd
        state: present
        chart_repo_url: https://argoproj.github.io/argo-helm
        chart_ref: argo-cd
        chart_version: 8.2.5
        release_namespace: argocd
        create_namespace: true
        release_values:
          global:
            domain: "{{ argocd_domain }}"
          configs:
            # secret:
            #   extra:
            #     dex.authentik.clientSecret: "{{ argocd_openid_client_secret }}"
            rbac:
              policy.csv: |
                 g, ArgoCD Admins, role:admin
                 g, authentik Admins, role:admin
                 g, ArgoCD Viewers, role:readonly
                 g, jazziro-kubelab:kubelab, role:readonly
            cm:
              admin.enabled: true
              exec.enabled: true
              dex.config: |
                connectors:
                # https://github.com/dexidp/website/blob/main/content/docs/connectors/github.md
                - type: github
                  id: github
                  name: GitHub
                  config:
                    clientID: "{{ github_client_id }}"
                    clientSecret: "{{ github_client_secret }}"
                    orgs:
                    - name: jazziro-kubelab
                      teams:
                      - kubelab
                # Authentik OIDC connector configuration
                - type: oidc
                  name: authentik
                  id: authentik
                  config:
                    issuer: "{{ argocd_openid_issuer_url }}"
                    redirectURI: "{{ argocd_openid_redirect_uri }}"
                    clientID: argocd
                    clientSecret: "{{ argocd_openid_client_secret }}"
                    insecureEnableGroups: true
                    scopes:
                      - openid
                      - profile
                      - email
            params:
              server.insecure: true
          server:
            replicas: 2
            service:
              type: ClusterIP
              # type: LoadBalancer
              # loadBalancerIP: "{{ argocd_static_ip }}"
            ingress:
              enabled: false
            # extraArgs: 
            #     - --dex-server
            #     - http://argocd-argo-cd-dex.argocd.svc.cluster.local:5556
            #     - --dex-server-plaintext 
          redis-ha:
            enabled: false
          controller:
            replicas: 1
          repoServer:
            replicas: 2
          applicationSet:
            replicas: 2
          dex:
            enabled: true
            # extraArgs:
            #   - --disable-tls 
    # - name: Wait for ArgoCD pods to be ready
    #   kubernetes.core.k8s_info:
    #     kind: Pod
    #     namespace: argocd
    #     label_selectors:
    #       - app.kubernetes.io/part-of=argocd
    #     wait: yes
    #     wait_sleep: 10
    #     wait_timeout: 300
    #     wait_condition:
    #       type: Ready
    #       status: "True"

    - name: Get Argo CD admin password
      shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      register: argocd_password
      changed_when: false

    - name: Get LoadBalancer IP
      shell: kubectl -n argocd get svc argocd-server -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
      register: lb_ip
      changed_when: false

    - name: Display Argo CD access information
      ansible.builtin.debug:
        msg:
          - "----------------------------------------"
          - "üöÄ Argo CD deployed successfully!"
          - "----------------------------------------"
          - "üìç URL:       http://{{ lb_ip.stdout }}"
          - "üë§ Username:  admin"
          - "üîë Password:  {{ argocd_password.stdout }}"
          - "----------------------------------------"
